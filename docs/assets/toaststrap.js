var Toaststrap;(()=>{"use strict";var t=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e={};(()=>{t(e);var i,o,n="toaststrap-";function s(t){return n+t}!function(t){t.TOP_START="TOP_START",t.TOP_END="TOP_END",t.TOP_CENTER="TOP_CENTER",t.BOTTOM_START="BOTTOM_START",t.BOTTOM_END="BOTTOM_END",t.BOTTOM_CENTER="BOTTOM_CENTER"}(i||(i={})),function(t){t.DEFAULT="DEFAULT",t.PRIMARY="PRIMARY",t.INFO="INFO",t.SUCCESS="SUCCESS",t.WARNING="WARNING",t.DANGER="DANGER",t.DARK="DARK",t.SWEET="SWEET"}(o||(o={}));const r={positions:{TOP_START:s("top")+" "+s("start"),TOP_END:s("top")+" "+s("end"),TOP_CENTER:s("top")+" "+s("center"),BOTTOM_CENTER:s("bottom")+" "+s("center"),BOTTOM_START:s("bottom")+" "+s("start"),BOTTOM_END:s("bottom")+" "+s("end")},types:{DEFAULT:["bg-default"],PRIMARY:["bg-primary","text-light"],INFO:["bg-info","text-light"],SUCCESS:["bg-success","text-light"],WARNING:["bg-warning","text-dark"],DANGER:["bg-danger","text-light"],DARK:["bg-dark","text-light"],SECONDARY:["bg-secondary","text-light"],SWEET:["bg-sweet","text-light"]}};var a=function(t,e){return t.classList.contains(e)};const u=function(){function t(t,e){return this.selector="".concat(n,"-notification"),this.element=new Audio(t),this.parent=e,this.make(),this}return t.prototype.make=function(){this.element.id=this.selector,this.parent.querySelector("#"+this.selector)||this.parent.appendChild(this.element)},Object.defineProperty(t.prototype,"instance",{get:function(){return this.element},enumerable:!1,configurable:!0}),t}(),p=function(){function t(t,e){return this.times={SECOND:1e3,MINUTE:6e4,HOUR:36e5,DAY:864e5,WEEK:6048e5,YEAR:31536e6,MONTH:2628e6},this.formats=[[.7*this.times.MINUTE,"just now"],[1.5*this.times.MINUTE,"a minute ago"],[60*this.times.MINUTE,"minutes ago",this.times.MINUTE],[1.5*this.times.HOUR,"an hour ago"],[this.times.DAY,"hours ago",this.times.HOUR],[2*this.times.DAY,"yesterday"],[7*this.times.DAY,"days ago",this.times.DAY],[1.5*this.times.WEEK,"a week ago"],[this.times.MONTH,"weeks ago",this.times.WEEK],[1.5*this.times.MONTH,"a month ago"],[this.times.YEAR,"months ago",this.times.MONTH],[1.5*this.times.YEAR,"a year ago"],[Number.MAX_VALUE,"years ago",this.times.YEAR]],this.input=t,this.reference=e,e?e instanceof Date&&(this.reference=e.getTime()):this.reference=(new Date).getTime(),t instanceof Date&&this.input.getTime(),"string"==typeof t&&(this.input=+new Date(t).getTime()),this}return t.prototype.print=function(){var t,e,i,o=this.reference-this.input;for(e=-1,i=this.formats.length;++e<i;)if(o<(t=this.formats[e])[0])return null==t[2]?t[1]:Math.round(o/t[2])+" "+t[1];return"Unknown"},t}(),c=function(){function t(){}return t.strFormat=function(t,e){if(t&&Object.keys(e).length>0){var i=new RegExp(/([{}])\1|[{](.*?)(?:!(.+?))?[}]/g);return t.replace(i,(function(t){var i=t.replace(/{/,"").replace(/}/,"");return e[i]?e[i]:t}))}return t},t.makeId=function(){return String(Math.floor(1e10+9e9*Math.random()))},t}();var l=function(){return l=Object.assign||function(t){for(var e,i=1,o=arguments.length;i<o;i++)for(var n in e=arguments[i])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t},l.apply(this,arguments)};const d=function(){function t(t){var e=this;if(this.closeEvent=function(){e.destroy(e.item)},this.options=l({avatar:"",dismissible:!0,duration:3e3,offset:10,parent:"body",pausable:!0,position:i.TOP_END,progress:!0,snackbar:!1,soundSource:"",soundable:!1,subtitle:{relative:!0,datetime:Date.now()},text:"",title:"",type:o.DEFAULT},t),"string"!=typeof this.options.subtitle&&"object"==typeof this.options.subtitle&&"datetime"in this.options.subtitle){var n=this.options.subtitle;"relative"in this.options.subtitle&&this.options.subtitle.relative?this.options.subtitle=new p(n.datetime).print():this.options.subtitle=String(n.datetime)}this.group=this.options.position||i.TOP_END,Object.keys(i).includes(this.options.position)?this.options.position=r.positions[this.options.position]:this.options.position=r.positions.TOP_END,this.item=document.createElement("div"),this.spaceBetween=5,this.options.soundable&&this.options.soundSource&&this.options.soundSource.length>0&&(this.sound=new u(this.options.soundSource,this.parentElement)),this.id=c.makeId(),this.createdAt=Date.now().toString(),this.timeout=setTimeout((function(){}),0),this.progressInterval=setInterval((function(){}),0),this.pauseProgressInterval=!1,this.progressStartTime=0}return t.prototype.show=function(){var t=this.parentElement,e=this.build;return t.insertBefore(e,t.firstChild),this.sound&&this.sound.instance.play().catch((function(){console.warn("Sound source given not found or not supported.")})),this.organize(),this},Object.defineProperty(t.prototype,"build",{get:function(){var t,e,i,o=this,n=(e=this.options,(i=document.createElement("div")).className="".concat(this.options.parent?"position-absolute":"position-fixed"," ").concat(e.position,"-").concat(e.offset," ").concat(s("container")),i.style.zIndex="2500",i),a=document.createElement("div");if(a.classList.add("toast"),n.setAttribute("data-id",this.id),n.setAttribute("data-created-at",this.createdAt),n.setAttribute("data-type",this.options.type?this.options.type.toLowerCase():""),n.setAttribute("data-group",this.group),n.setAttribute("data-snackbar",String(this.options.snackbar)),Boolean(this.options.snackbar)?(t=a.classList).add.apply(t,r.types[this.options.type]):a.appendChild(function(t){var e,i=t.options,o=document.createElement("div");o.classList.add("toast-header"),i.avatar&&o.appendChild(function(t){var e=document.createElement("img");return e.classList.add("rounded","me-2"),e.src=t.avatar||"",e.width=20,e.height=20,e}(i)),i.type&&(e=o.classList).add.apply(e,r.types[i.type]);var n,s,a=document.createElement("strong");if(a.classList.add("me-auto"),a.innerText=i.title,o.appendChild(a),i.subtitle){var u=document.createElement("small");"string"==typeof i.subtitle&&(u.innerText=i.subtitle),o.appendChild(u)}return i.dismissible&&o.appendChild((n=t.closeEvent,(s=document.createElement("button")).classList.add("btn-close"),s.setAttribute("type","button"),s.setAttribute("area-label","Close"),s.addEventListener("click",(function(t){t.stopPropagation(),n()})),s)),o}(this)),a.appendChild(function(t){var e=t.options,i=document.createElement("div");return i.classList.add("toast-body"),i.innerHTML=e.text,i}(this)),this.options.progress&&a.appendChild(function(t){var e=t.options.duration,i=document.createElement("div");i.classList.add("toast-footer");var o=document.createElement("div");return o.classList.add("toast-footer-inner"),i.appendChild(o),e>0&&(e<100&&(e*=1e3),o.style.animationDuration="".concat(e,"ms")),i}(this)),n.appendChild(a),new ResizeObserver((function(){o.organize()})).observe(n),this.item=n,n.classList.add("show"),this.options.duration>0&&(this.timeout=setTimeout((function(){o.destroy(n)}),this.options.duration),this.options.pausable)){var u=function(){clearTimeout(o.timeout),o.pauseProgressInterval=!0},p=function(){o.pauseProgressInterval=!1,o.progressStartTime=(new Date).getTime(),o.timeout=setTimeout((function(){o.destroy(o.item)}),o.options.duration)};"mouseover touchstart touchend".split(" ").forEach((function(t){o.item.addEventListener(t,u)})),"mouseleave touchend".split(" ").forEach((function(t){o.item.addEventListener(t,p)}))}return n},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"parentElement",{get:function(){if(this.options.parent){var t=document.querySelector(this.options.parent);if(!t)throw"User root element not exists.";return Array.isArray(t)?t[0]:t}return document.body},enumerable:!1,configurable:!0}),t.prototype.destroy=function(t){t.classList.remove("show"),"function"==typeof this.options.onClose&&this.options.onClose(this),window.setTimeout((function(){var e;null===(e=t.parentNode)||void 0===e||e.removeChild(t)}),400)},t.prototype.organize=function(){var t=this,e=this.options.offset,i={top:Number(e),bottom:Number(e)},o={top:Number(e),bottom:Number(e)},r={top:Number(e),bottom:Number(e)},u=".".concat(s("container"),"[data-group='").concat(this.group,"']"),p=window.innerWidth>0?window.innerWidth:screen.width;p<=360&&(u=".".concat(s("container")));var c,l=document.querySelectorAll(u);l.length>0&&l.forEach((function(e){c=a(e,s("top"))?s("top"):a(e,s("middle"))?s("middle"):s("bottom");var u=e.offsetHeight;c=c.substr("".concat(n,"-").length-1,c.length-1),p<=360?(e.style[c]=r[c]+"px",r[c]+=u+t.spaceBetween):a(e,"start-".concat(t.options.offset))?(e.style[c]=i[c]+"px",i[c]+=u+t.spaceBetween):(e.style[c]=o[c]+"px",o[c]+=u+t.spaceBetween)}))},t}();var h="TypeError: Option {option} should be in type {type}.",m=function(t,e,i){return void 0===e&&(e=self),void 0===i&&(i="."),(Array.isArray(t)?t:t.split(i)).reduce((function(t,e){return t&&t[e]}),e)},f=[[h,"dismissible","boolean"],[h,"duration","number"],[h,"offset","number"],[h,"onClose","function"],[h,"onShow","function"],[h,"parent","string"],[h,"pausable","boolean"],[h,"position","string"],[h,"progress","boolean"],[h,"snackbar","boolean"],[h,"soundSource","string"],[h,"soundable","boolean"],[h,"subtitle",["string","object"]],[h,"text","string"],[h,"title","string"],[h,"type","string"],[h,"subtitle.relative","boolean"],[h,"subtitle.datetime",["string","Date","number"]]];var b=function(){return b=Object.assign||function(t){for(var e,i=1,o=arguments.length;i<o;i++)for(var n in e=arguments[i])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t},b.apply(this,arguments)};window.toaststrap=function(t){return Object.keys(t).length&&function(t){f.length>0&&f.forEach((function(e){var i=e[0],o=e[1],n=e[2];if(Array.isArray(n)){var s=!1;if(n.forEach((function(e){void 0===m(o,t)||typeof m(o,t)!==e||(s=!0)})),!s)throw c.strFormat(i,{option:o,type:n.toString()})}else if(m(o,t)&&typeof m(o,t)!==n)throw c.strFormat(i,{option:o,type:n})}))}(t),new d(b({},t))},window.toaststrap_position=i,window.toaststrap_type=o})(),Toaststrap=e})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,